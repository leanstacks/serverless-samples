service: samples-rest-dynamodb-modular

custom:
  tableName: 'users-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  memorySize: 128
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  getUser:
    handler: src/handler/gateway.handle
    events:
      - http:
          path: /users/{proxy+}
          method: get
  listUsers:
    handler: src/handler/gateway.handle
    events:
      - http:
          path: /users
          method: get
  createUser:
    handler: src/handler/gateway.handle
    events:
      - http:
          path: /users
          method: post
  updateUser:
    handler: src/handler/gateway.handle
    events:
      - http:
          path: /users/{proxy+}
          method: put
  deleteUser:
    handler: src/handler/gateway.handle
    events:
      - http:
          path: /users/{proxy+}
          method: delete

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}